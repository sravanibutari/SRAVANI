<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Upcoming Webinar - What's new in Apache Camel 3</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/wmnlg7bqX9k/upcoming-webinar-whats-new-in-apache.html" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="feed_group_name_fusesource" scheme="searchisko:content:tags" /><category term="feed_name_clausibsen" scheme="searchisko:content:tags" /><category term="webinar" scheme="searchisko:content:tags" /><author><name>Claus Ibsen</name></author><id>searchisko:content:id:jbossorg_blog-upcoming_webinar_what_s_new_in_apache_camel_3</id><updated>2020-02-27T10:17:06Z</updated><published>2020-02-27T10:17:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;On March 3rd, at 3pm CET (Central European Timezone) I will co-host, together with Andrea Cosentino, a webinar session for 1 hour, where we cover all the great new features that are in the Apache Camel v3 release.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://www.redhat.com/en/events/webinar/apache-camel-3-here-whats-new?sc_cid=7013a000002DMQhAAO"&gt;&lt;img border="0" data-original-height="223" data-original-width="691" height="128" src="https://1.bp.blogspot.com/-krFtYasaT7k/XleWhQqG-nI/AAAAAAAACF4/AjjTNFmVuvc8MguZzk6CQhegddBsendnQCLcBGAsYHQ/s400/camel3-is-here.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Andrea and I will cover in more details the high level goals of Apache Camel 3, and focus on the key elements about making Camel smaller, lighter, and faster for the cloud native world. So you will find details about what we have done internally to make this happen.&lt;br /&gt;&lt;br /&gt;We also cover and introduce Camel K, Camel Quarkus and Camel Kafka Connector where we have 4 live demos ready for you. And finally we present the roadmap for the upcoming releases.&lt;br /&gt;&lt;br /&gt;At the end we have Q&amp;amp;A session where we will assist and answer as many questions you may have.&lt;br /&gt;&lt;br /&gt;The webinar is free to attend, but requires registration, as the webinar is run by professional media company.&lt;br /&gt;&lt;br /&gt;&lt;a href="https://www.redhat.com/en/events/webinar/apache-camel-3-here-whats-new?sc_cid=7013a000002DMQhAAO"&gt;More details and registration here&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;PS: Yes we will cover details up till the latest Camel 3.1 release which is going to be released today ;)&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=wtZgLyOdGzU:7DaY-Q5dlMQ:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=wtZgLyOdGzU:7DaY-Q5dlMQ:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=wtZgLyOdGzU:7DaY-Q5dlMQ:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=wtZgLyOdGzU:7DaY-Q5dlMQ:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=wtZgLyOdGzU:7DaY-Q5dlMQ:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/ApacheCamel?a=wtZgLyOdGzU:7DaY-Q5dlMQ:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/ApacheCamel?i=wtZgLyOdGzU:7DaY-Q5dlMQ:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/ApacheCamel/~4/wtZgLyOdGzU" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/wmnlg7bqX9k" height="1" width="1" alt=""/&gt;</content><summary>On March 3rd, at 3pm CET (Central European Timezone) I will co-host, together with Andrea Cosentino, a webinar session for 1 hour, where we cover all the great new features that are in the Apache Camel v3 release. Andrea and I will cover in more details the high level goals of Apache Camel 3, and focus on the key elements about making Camel smaller, lighter, and faster for the cloud native world. ...</summary><dc:creator>Claus Ibsen</dc:creator><dc:date>2020-02-27T10:17:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/ApacheCamel/~3/wtZgLyOdGzU/upcoming-webinar-whats-new-in-apache.html</feedburner:origLink></entry><entry><title>C# 8 pattern matching</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/la8A9T1dlag/" /><category term=".net" scheme="searchisko:content:tags" /><category term=".NET Core" scheme="searchisko:content:tags" /><category term="C#" scheme="searchisko:content:tags" /><category term="C# 8" scheme="searchisko:content:tags" /><category term="case" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="pattern matching" scheme="searchisko:content:tags" /><category term="switch" scheme="searchisko:content:tags" /><author><name>Tom Deseyn</name></author><id>searchisko:content:id:jbossorg_blog-c_8_pattern_matching</id><updated>2020-02-27T08:00:04Z</updated><published>2020-02-27T08:00:04Z</published><content type="html">&lt;p&gt;In the previous article, we looked at &lt;a href="https://developers.redhat.com/blog/2020/02/24/c-8-asynchronous-streams/"&gt;C# 8 asynchronous streams&lt;/a&gt;. Another new C# 8 feature is extended support for pattern matching. In this article, we’ll take a look at what was possible with C# 7 and what was added in C# 8.&lt;/p&gt; &lt;h2&gt;C# 7 pattern matching&lt;/h2&gt; &lt;p&gt;Pattern matching is a feature that was introduced in C# 7. It allows you to check whether an object is of a particular type and check its value in a concise way through the use of &lt;code&gt;is&lt;/code&gt; patterns and &lt;code&gt;case&lt;/code&gt; patterns.&lt;/p&gt; &lt;h3&gt;The &lt;code&gt;is&lt;/code&gt; pattern&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;is&lt;/code&gt; pattern allows you to check whether a variable is of a certain type, and then assign it to a new variable. Further checks can then be made on that variable:&lt;/p&gt; &lt;pre&gt;if (input is int count &amp;#38;&amp;#38; count &amp;#62; 100) &lt;/pre&gt; &lt;p&gt;This pattern can also be used to check if a variable is &lt;code&gt;null&lt;/code&gt;:&lt;/p&gt; &lt;pre&gt;if (input is null) &lt;/pre&gt; &lt;p&gt;This second statement is guaranteed to do a &lt;code&gt;null&lt;/code&gt; reference check. When you use &lt;code&gt;== null&lt;/code&gt;, the &lt;code&gt;operator==&lt;/code&gt; might be overloaded, causing a different check to be performed.&lt;/p&gt; &lt;h3&gt;The &lt;code&gt;case&lt;/code&gt; pattern&lt;/h3&gt; &lt;p&gt;The &lt;code&gt;switch&lt;/code&gt; statement cases also support patterns. These patterns can include a type check, plus additional conditions:&lt;/p&gt; &lt;pre&gt;switch (i) { case int n when n &amp;#62; 100: ... case Car c: ... case null: ... case var j when (j.Equals(10)): ... default: ... } &lt;/pre&gt; &lt;p&gt;In the examples above, you see the &lt;code&gt;case&lt;/code&gt; statement for &lt;code&gt;null&lt;/code&gt;, &lt;code&gt;default&lt;/code&gt;, a type check, conditions, and using conditions without a type check (&lt;code&gt;case var&lt;/code&gt;). Note that &lt;code&gt;case var&lt;/code&gt; can also match &lt;code&gt;null&lt;/code&gt;, so to avoid that happening we’ve placed it below &lt;code&gt;case null&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The classic &lt;code&gt;switch&lt;/code&gt; statement allowed only constants. Because of the dynamic conditions, the order of pattern cases matters.&lt;/p&gt; &lt;h2&gt;C# 8 pattern matching&lt;/h2&gt; &lt;p&gt;C# 8 expands the support for patterns and where they can be used.&lt;/p&gt; &lt;h3&gt;&lt;code&gt;switch&lt;/code&gt; expressions&lt;/h3&gt; &lt;p&gt;A &lt;code&gt;switch&lt;/code&gt; expression is a concise way to return a specific value based on another value:&lt;/p&gt; &lt;pre&gt;var rgbColor = knownColor switch { KnownColor.Red =&amp;#62; new RGBColor(0xFF, 0x00, 0x00), KnownColor.Green =&amp;#62; new RGBColor(0x00, 0xFF, 0x00), ... _ =&amp;#62; throw new ArgumentException(message: "invalid enum value", paramName: nameof(knownColor)), }; &lt;/pre&gt; &lt;p&gt;A regular &lt;code&gt;switch&lt;/code&gt; does not return a value. This syntax is more concise. There are no &lt;code&gt;case&lt;/code&gt; keywords, and the &lt;code&gt;default&lt;/code&gt; case was replaced with a discard (&lt;code&gt;_&lt;/code&gt;).&lt;/p&gt; &lt;p&gt;The &lt;code&gt;case&lt;/code&gt; conditions can be patterns. It’s not possible to include statements for handling a case. For each case, a single expression must be provided that represents the resulting value. This expression can be a &lt;code&gt;switch&lt;/code&gt; expression.&lt;/p&gt; &lt;p&gt;It&amp;#8217;s also possible to start from multiple input values by collecting them into a tuple:&lt;/p&gt; &lt;pre&gt;public decimal GetDiscount(CustomerType customer, DiscountPeriod period) =&amp;#62; (customer, period) switch { (CustomerType.Gold, DiscountPeriod.Christmas) =&amp;#62; 0.2m, (CustomerType.Silver, DiscountPeriod.Christmas) =&amp;#62; 0.1m, (_, DiscountPeriod.Christmas) =&amp;#62; 0.05m, (_, _) =&amp;#62; 0m, }; &lt;/pre&gt; &lt;p&gt;The conditions for the &lt;code&gt;switch&lt;/code&gt; are now also tuples. Their items have patterns that are matched against the corresponding input tuple element.nIn the example, we&amp;#8217;ve used the discard (&lt;code&gt;_&lt;/code&gt;) to ignore a tuple item. Other patterns can also be used.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;is&lt;/code&gt; keyword can also be used with tuple patterns.&lt;/p&gt; &lt;p&gt;Tuple patterns can also be used against types that are &lt;a href="https://docs.microsoft.com/en-us/dotnet/csharp/whats-new/csharp-7#tuples" target="_blank" rel="noopener noreferrer"&gt;deconstructable to a tuple&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;static Sector GetSector(Point point) =&amp;#62; point switch { (0, 0) =&amp;#62; Sector.Origin, (2, _) =&amp;#62; Sector.One, var (x, y) when x &amp;#62; 0 &amp;#38;&amp;#38; y &amp;#62; 0 =&amp;#62; Sector.Two, (1, var y) when y &amp;#60; 0 =&amp;#62; Sector.Three, _ =&amp;#62; Sector.Unknown }; &lt;/pre&gt; &lt;h3&gt;Property patterns&lt;/h3&gt; &lt;p&gt;Property patterns express a property that needs to have a specific constant value:&lt;/p&gt; &lt;pre&gt;switch (location) { case { State: "MN" }: ... } &lt;/pre&gt; &lt;p&gt;The above &lt;code&gt;case&lt;/code&gt; will match when &lt;code&gt;location.State&lt;/code&gt; equals &lt;code&gt;MN&lt;/code&gt;. Property patterns can be used in switch expressions also.&lt;/p&gt; &lt;p&gt;A special case is the &lt;code&gt;{ }&lt;/code&gt; pattern, which means: not &lt;code&gt;null&lt;/code&gt;. This pattern can also be used with the &lt;code&gt;is&lt;/code&gt; keyword:&lt;/p&gt; &lt;pre&gt;if (location is { State: ”MN” }) &lt;/pre&gt; &lt;p&gt;We can check both on the type and property, for example:&lt;/p&gt; &lt;pre&gt;switch (vehicle) { case Taxi { Occupants: 2 } t: ... } &lt;/pre&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;In this article, we’ve looked at C#’s support for pattern matching. Pattern matching provides us with a concise syntax match against a type, checks properties, and combines these patterns with additional conditions.&lt;/p&gt; &lt;p&gt;C# 8 can be used with the .NET Core 3.1 SDK, which is available on &lt;a href="https://access.redhat.com/documentation/en-us/net_core/" target="_blank" rel="noopener noreferrer"&gt;Red Hat Enterprise Linux&lt;/a&gt;, &lt;a href="http://fedoraloves.net/" target="_blank" rel="noopener noreferrer"&gt;Fedora&lt;/a&gt;, &lt;a href="https://dotnet.microsoft.com/download" target="_blank" rel="noopener noreferrer"&gt;Windows, macOS, and other Linux distributions&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F27%2Fc-8-pattern-matching%2F&amp;#38;linkname=C%23%208%20pattern%20matching" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F27%2Fc-8-pattern-matching%2F&amp;#38;linkname=C%23%208%20pattern%20matching" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F27%2Fc-8-pattern-matching%2F&amp;#38;linkname=C%23%208%20pattern%20matching" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F27%2Fc-8-pattern-matching%2F&amp;#38;linkname=C%23%208%20pattern%20matching" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F27%2Fc-8-pattern-matching%2F&amp;#38;linkname=C%23%208%20pattern%20matching" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F27%2Fc-8-pattern-matching%2F&amp;#38;linkname=C%23%208%20pattern%20matching" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F27%2Fc-8-pattern-matching%2F&amp;#38;linkname=C%23%208%20pattern%20matching" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F27%2Fc-8-pattern-matching%2F&amp;#038;title=C%23%208%20pattern%20matching" data-a2a-url="https://developers.redhat.com/blog/2020/02/27/c-8-pattern-matching/" data-a2a-title="C# 8 pattern matching"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/02/27/c-8-pattern-matching/"&gt;C# 8 pattern matching&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/la8A9T1dlag" height="1" width="1" alt=""/&gt;</content><summary>In the previous article, we looked at C# 8 asynchronous streams. Another new C# 8 feature is extended support for pattern matching. In this article, we’ll take a look at what was possible with C# 7 and what was added in C# 8. C# 7 pattern matching Pattern matching is a feature that was introduced in C# 7. It allows you to check whether an object is of a particular type and check its value in a con...</summary><dc:creator>Tom Deseyn</dc:creator><dc:date>2020-02-27T08:00:04Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/02/27/c-8-pattern-matching/</feedburner:origLink></entry><entry><title>Red Hat simplifies container development and redistribution of RHEL packages</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/lHzz8NP_w1Q/" /><category term="Announcement" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Partners" scheme="searchisko:content:tags" /><category term="Red Hat Container Certification" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="UBI" scheme="searchisko:content:tags" /><author><name>Mike Guerette</name></author><id>searchisko:content:id:jbossorg_blog-red_hat_simplifies_container_development_and_redistribution_of_rhel_packages</id><updated>2020-02-26T14:00:46Z</updated><published>2020-02-26T14:00:46Z</published><content type="html">&lt;p&gt;Now, application developers in the &lt;a href="https://developers.redhat.com/techpartner/"&gt;Red Hat Technology Partner&lt;/a&gt; program can build their container apps and redeploy from the full set of Red Hat Enterprise Linux (RHEL) user space packages (non-kernel). This nearly triples the number of packages over UBI only.&lt;/p&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;When we &lt;/span&gt;&lt;a href="https://www.redhat.com/en/blog/introducing-red-hat-universal-base-image" target="_blank" rel="noopener noreferrer"&gt;&lt;span style="font-weight: 400;"&gt;introduced&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; Red Hat Universal Base Images (UBI) in May 2019, we provided Red Hat partners the ability to freely use and redistribute a substantial number of RHEL packages that can be deployed on both Red Hat and non-Red Hat platforms. This gave developers the ability to build safe, secure, and portable container-based software that could then be deployed anywhere. The feedback on this has been overwhelmingly positive and we thank you for it, but we learned that you needed more, so we’re sharing this advanced preview with Red Hat Partner Connect members to help you with your planning. &lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;Expanded and exclusive redistribution rights for Red Hat Technology Partners&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;We are pleased to &lt;a href="http://redhat.com/en/about/press-releases/red-hat-extends-partner-offerings-drive-open-hybrid-cloud-innovation" target="_blank" rel="noopener noreferrer"&gt;announce&lt;/a&gt; expanded partner &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;terms and conditions &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;that grant Red Hat Technology Partners free use and redistribution rights to all Red Hat Enterprise Linux user space packages when you build upon UBI-based images&lt;/span&gt;&lt;span style="font-weight: 400;"&gt;. With more than triple the number of RHEL packages now available, you can simplify your container and Operator development and freely re-distribute your container-based software through both Red Hat and non-Red Hat registries. This is only available to Red Hat partners who participate in and complete &lt;a href="https://connect.redhat.com/resources/container-certification-overview" target="_blank" rel="noopener noreferrer"&gt;Red Hat Container Certification&lt;/a&gt;.&lt;/span&gt;&lt;span id="more-688767"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;Get started&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;To use and redistribute all RHEL user space packages, &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Partner Connect members that &lt;/span&gt;&lt;span style="font-weight: 400;"&gt;are &lt;a href="https://connect.redhat.com/partner-with-us/red-hat-container-certification" target="_blank" rel="noopener noreferrer"&gt;enrolled in the Red Hat Container Certification program&lt;/a&gt; need to accept the updated Container Appendix and agree to certify their software via the program. Containers will need to be built on a RHEL container host with an active subscription in order to access all of the applicable RHEL packages.&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;&lt;b&gt;FAQs&lt;/b&gt;&lt;/h2&gt; &lt;ol&gt; &lt;li&gt;&lt;strong&gt;What are the specific requirements that partners have to meet to take advantage of the expanded scope of Red Hat Container Certification?&lt;/strong&gt; &lt;ol&gt; &lt;li&gt;Partner container images must use the RHEL 7 UBI or RHEL 8 UBI as a base image.&lt;/li&gt; &lt;li&gt;Partners must accept the &lt;a href="https://developers.redhat.com/techpartner/" target="_blank" rel="noopener noreferrer"&gt;Red Hat Technology Partner&lt;/a&gt; Connect agreement. There is no change to the current agreement, so if it is already signed there is no need to re-sign it.&lt;/li&gt; &lt;li&gt;Partners must participate in Red Hat Container Certification, which means accepting the updated Container Appendix terms as part of the certification workflow and completing the container certification. This updated Container Appendix grants use of all RHEL packages except the kernel, as long as the resulting work does not constitute a material reproduction of a commercial Red Hat product.&lt;/li&gt; &lt;/ol&gt; &lt;/li&gt; &lt;li&gt;&lt;strong&gt;How is this expanded scope different than Red Hat Universal Base Images (UBI)?&lt;/strong&gt;&lt;br /&gt; Anyone can use and redistribute UBI packages. Whether they have a Red Hat Enterprise Linux subscription or not. UBI, which is based on RHEL, is a subset of RHEL user space packages. This announcement lets Red Hat Technology Partners use and redistribute all RHEL user space packages, including UBI.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;What’s different in the certification workflow? &lt;/strong&gt;&lt;br /&gt; There is no change to how you submit your software to be certified.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;What changes occur to coding practices?&lt;/strong&gt;&lt;br /&gt; None. Keep using UBI base images as you are today. Add any user space packages needed from the various RHEL repos.&lt;/li&gt; &lt;li&gt;&lt;strong&gt;Has the UBI changed to include RHEL kernel? &lt;/strong&gt;&lt;br /&gt; No, UBI is the same and anyone can use and freely redistribute UBI-based images whether they have a Red Hat subscription or not. This updated partner agreement lets technology partners use and redistribute any RHEL user space package built from UBI-based images.&lt;/li&gt; &lt;/ol&gt; &lt;h2&gt;&lt;b&gt;Resources&lt;/b&gt;&lt;/h2&gt; &lt;ul&gt; &lt;li style="font-weight: 400;"&gt;&lt;a href="https://connect.redhat.com/partner-with-us/red-hat-container-certification" target="_blank" rel="noopener noreferrer"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Container Certification&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; &lt;/span&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;a href="https://rhc4tp-cms-prod-vpc-76857813.s3.amazonaws.com/s3fs-public/RH-Container-Cert-Datasheet-US%20%281%29.pdf" target="_blank" rel="noopener noreferrer"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Container Certification datasheet&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;a href="https://redhat-connect.gitbook.io/partner-guide-for-red-hat-openshift-and-container/" target="_blank" rel="noopener noreferrer"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Container Certification Partner Guide&lt;/span&gt;&lt;/a&gt;&lt;/li&gt; &lt;li style="font-weight: 400;"&gt;&lt;a href="https://developers.redhat.com/products/rhel/ubi/" target="_blank" rel="noopener noreferrer"&gt;&lt;span style="font-weight: 400;"&gt;Red Hat Universal Base Image UBI page&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; and &lt;/span&gt;&lt;a href="https://developers.redhat.com/articles/ubi-faq/" target="_blank" rel="noopener noreferrer"&gt;&lt;span style="font-weight: 400;"&gt;UBI FAQ&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; &lt;/span&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://developers.redhat.com/techpartner/" target="_blank" rel="noopener noreferrer"&gt;Learn about becoming Red Hat partner&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;h2&gt;&lt;b&gt;Learn more&lt;/b&gt;&lt;/h2&gt; &lt;p&gt;&lt;span style="font-weight: 400;"&gt;If you’d like to learn more, &lt;/span&gt;&lt;a href="https://www.brighttalk.com/webcast/14777/384281?utm_source=Red+Hat&amp;#38;utm_medium=brighttalk&amp;#38;utm_campaign=384281" target="_blank" rel="noopener noreferrer"&gt;&lt;span style="font-weight: 400;"&gt;join&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; us for our March 18 webinar &amp;#8220;Simplified container development and redistribution with RHEL,&amp;#8221; where we’ll discuss how these expanded redistribution capabilities augment your software development and business. &lt;/span&gt;&lt;a href="https://www.brighttalk.com/webcast/14777/384281?utm_source=Red+Hat&amp;#38;utm_medium=brighttalk&amp;#38;utm_campaign=384281" target="_blank" rel="noopener noreferrer"&gt;&lt;span style="font-weight: 400;"&gt;Register&lt;/span&gt;&lt;/a&gt;&lt;span style="font-weight: 400;"&gt; today.&lt;/span&gt;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fred-hat-simplifies-container-dev-and-redistribution-rhel-packages%2F&amp;#38;linkname=Red%20Hat%20simplifies%20container%20development%20and%20redistribution%20of%20RHEL%20packages" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fred-hat-simplifies-container-dev-and-redistribution-rhel-packages%2F&amp;#38;linkname=Red%20Hat%20simplifies%20container%20development%20and%20redistribution%20of%20RHEL%20packages" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fred-hat-simplifies-container-dev-and-redistribution-rhel-packages%2F&amp;#38;linkname=Red%20Hat%20simplifies%20container%20development%20and%20redistribution%20of%20RHEL%20packages" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fred-hat-simplifies-container-dev-and-redistribution-rhel-packages%2F&amp;#38;linkname=Red%20Hat%20simplifies%20container%20development%20and%20redistribution%20of%20RHEL%20packages" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fred-hat-simplifies-container-dev-and-redistribution-rhel-packages%2F&amp;#38;linkname=Red%20Hat%20simplifies%20container%20development%20and%20redistribution%20of%20RHEL%20packages" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fred-hat-simplifies-container-dev-and-redistribution-rhel-packages%2F&amp;#38;linkname=Red%20Hat%20simplifies%20container%20development%20and%20redistribution%20of%20RHEL%20packages" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fred-hat-simplifies-container-dev-and-redistribution-rhel-packages%2F&amp;#38;linkname=Red%20Hat%20simplifies%20container%20development%20and%20redistribution%20of%20RHEL%20packages" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fred-hat-simplifies-container-dev-and-redistribution-rhel-packages%2F&amp;#038;title=Red%20Hat%20simplifies%20container%20development%20and%20redistribution%20of%20RHEL%20packages" data-a2a-url="https://developers.redhat.com/blog/2020/02/26/red-hat-simplifies-container-dev-and-redistribution-rhel-packages/" data-a2a-title="Red Hat simplifies container development and redistribution of RHEL packages"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/02/26/red-hat-simplifies-container-dev-and-redistribution-rhel-packages/"&gt;Red Hat simplifies container development and redistribution of RHEL packages&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/lHzz8NP_w1Q" height="1" width="1" alt=""/&gt;</content><summary>Now, application developers in the Red Hat Technology Partner program can build their container apps and redeploy from the full set of Red Hat Enterprise Linux (RHEL) user space packages (non-kernel). This nearly triples the number of packages over UBI only. When we introduced Red Hat Universal Base Images (UBI) in May 2019, we provided Red Hat partners the ability to freely use and redistribute a...</summary><dc:creator>Mike Guerette</dc:creator><dc:date>2020-02-26T14:00:46Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/02/26/red-hat-simplifies-container-dev-and-redistribution-rhel-packages/</feedburner:origLink></entry><entry><title>Speed up Maven builds in Tekton Pipelines</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/uhVVkpYW8IQ/" /><category term="ci/cd" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="Maven" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><category term="pipelines" scheme="searchisko:content:tags" /><category term="Tekton" scheme="searchisko:content:tags" /><category term="workspaces" scheme="searchisko:content:tags" /><author><name>Siamak Sadeghianfar</name></author><id>searchisko:content:id:jbossorg_blog-speed_up_maven_builds_in_tekton_pipelines</id><updated>2020-02-26T08:00:07Z</updated><published>2020-02-26T08:00:07Z</published><content type="html">&lt;p&gt;&lt;a href="https://tekton.dev" target="_blank" rel="noopener noreferrer"&gt;Tekton&lt;/a&gt; is an open source project that provides standard Kubernetes-style resources and building blocks for creating CI/CD pipelines that can run on any Kubernetes. Tekton does this by introducing a number of custom resource definitions (CRD) such as &lt;code&gt;Pipeline&lt;/code&gt;, &lt;code&gt;Task&lt;/code&gt;, and &lt;code&gt;ClusterTask&lt;/code&gt; to provide a language and structure for defining delivery pipelines as shown in Figure 1. Tekton also provides a set of controllers that are responsible for running pipelines in pods on demand whenever a user creates an aforementioned resource.&lt;/p&gt; &lt;div id="attachment_683427" style="width: 416px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-683427" class="wp-image-683427 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/image2.png" alt="Diagram of a Pipeline containing a Task workflow." width="406" height="139" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/image2.png 406w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/image2-300x103.png 300w" sizes="(max-width: 406px) 100vw, 406px" /&gt;&lt;p id="caption-attachment-683427" class="wp-caption-text"&gt;Figure 1: A Tekton pipeline contains a sequence of tasks.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The use of Tekton has grown rapidly over the last year. One of the frequently requested features is the ability to share artifacts between tasks in order to cache dependencies for build tools such as Maven and NPM. Although it was possible previously to use volumes in tasks, the release of Tekton 0.10 adds support for workspaces, which makes it easier for tasks within a pipeline to share artifacts using a persistent volume.&lt;/p&gt; &lt;p&gt;In this article, we look at how workspaces can be used to cache Maven dependencies in Java builds in order to remove the need to download dependencies for each build.&lt;/p&gt; &lt;p&gt;&lt;span id="more-683407"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Tekton workspaces&lt;/h2&gt; &lt;p&gt;&lt;em&gt;Workspaces&lt;/em&gt; in Tekton Pipelines refers to a declaration of shared volumes that a pipeline needs at runtime. They are similar to volumes except that one doesn’t provide the actual volume and only declares the intent. In a pipeline definition, a workspace can then be passed to relevant tasks as a shared volume. The result is that when the same workspace is provided to a number of tasks, they all can read and write from the exact same volume and share files and artifacts as required.&lt;/p&gt; &lt;p&gt;It’s worth mentioning that although a volume refers to a persistent volume for caching Maven dependencies, it can also be a &lt;code&gt;ConfigMap&lt;/code&gt;, or a secret that is passed to a pipeline run to be mounted and shared between the tasks.&lt;/p&gt; &lt;p&gt;Let’s see how workspaces can be used in practice to cache Maven dependencies.&lt;/p&gt; &lt;h2&gt;Maven task with a workspace&lt;/h2&gt; &lt;p&gt;In order to build Maven projects in a pipeline, a Maven task should be defined. The Tekton catalog already contains a &lt;a href="https://github.com/tektoncd/catalog/tree/master/maven" target="_blank" rel="noopener noreferrer"&gt;Maven task&lt;/a&gt;. However, we need a modified version of this task to declare a workspace for Maven&amp;#8217;s dependencies:&lt;/p&gt; &lt;pre&gt;apiVersion: tekton.dev/v1alpha1 kind: Task metadata: name: mvn spec: workspaces: - name: maven-repo inputs: params: - name: GOALS description: The Maven goals to run type: array default: ["package"] resources: - name: source type: git steps: - name: mvn image: gcr.io/cloud-builders/mvn workingDir: /workspace/source command: ["/usr/bin/mvn"] args: - -Dmaven.repo.local=$(workspaces.maven-repo.path) - "$(inputs.params.GOALS)" &lt;/pre&gt; &lt;p&gt;This task is mostly similar to the one in the Tekton catalog, with the difference being that a workspace called &lt;code&gt;maven-repo&lt;/code&gt; is defined. This workspace states that whenever this task is to run, a volume should be provided and mounted to act as the local Maven repository. The path to this workspace is then passed to the Maven command in order to be used as the local Maven repository with &lt;code&gt;-Dmaven.repo.local=$(workspaces.maven-repo.path)&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The path where the workspace should be mounted can be configured; however, in this example, the default mount path is adequate.&lt;/p&gt; &lt;h2&gt;Build a pipeline with a workspace&lt;/h2&gt; &lt;p&gt;Now, let’s define a pipeline that uses the Maven task to build a Java application. In order to demonstrate the caching effect for Maven dependencies, the following pipeline (shown in Figure 2) runs three Maven tasks to perform the build, integrate the tasks, and generate a report for the test results, code coverage, etc.&lt;/p&gt; &lt;div id="attachment_683447" style="width: 370px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-683447" class="wp-image-683447 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/image4.png" alt="Diagram showing the Maven build pipeline's workflow" width="360" height="173" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/image4.png 360w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/image4-300x144.png 300w" sizes="(max-width: 360px) 100vw, 360px" /&gt;&lt;p id="caption-attachment-683447" class="wp-caption-text"&gt;Figure 2: An example Tekton Maven build pipeline.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The pipeline definition that represents the pipeline in Figure 2 is:&lt;/p&gt; &lt;pre&gt;apiVersion: tekton.dev/v1alpha1 kind: Pipeline metadata: name: maven-build spec: workspaces: - name: local-maven-repo resources: - name: app-git type: git tasks: - name: build taskRef: name: mvn resources: inputs: - name: source resource: app-git params: - name: GOALS value: ["package"] workspaces: - name: maven-repo workspace: local-maven-repo - name: int-test taskRef: name: mvn runAfter: ["build"] resources: inputs: - name: source resource: app-git params: - name: GOALS value: ["verify"] workspaces: - name: maven-repo workspace: local-maven-repo - name: gen-report taskRef: name: mvn runAfter: ["build"] resources: inputs: - name: source resource: app-git params: - name: GOALS value: ["site"] workspaces: - name: maven-repo workspace: local-maven-repo &lt;/pre&gt; &lt;p&gt;Notice the declaration of the pipeline&amp;#8217;s &lt;code&gt;local-maven-repo&lt;/code&gt; workspace. It states that when this pipeline is to run, a volume should be provided and used as this workspace. This workspace is then provided to each of the tasks in this pipeline so that they all share the same workspace.&lt;/p&gt; &lt;h2&gt;Run a Maven pipeline&lt;/h2&gt; &lt;p&gt;The pipeline now can be run to build a Java application such as the &lt;a href="https://github.com/spring-projects/spring-petclinic" target="_blank" rel="noopener noreferrer"&gt;Spring PetClinic&lt;/a&gt; sample application. Before starting the pipeline, a &lt;a href="https://kubernetes.io/docs/concepts/storage/persistent-volumes/#persistentvolumeclaims" target="_blank" rel="noopener noreferrer"&gt;&lt;code&gt;PersistentVolumeClaim&lt;/code&gt; (PVC)&lt;/a&gt; is needed for providing a workspace to cache the Maven dependencies:&lt;/p&gt; &lt;pre&gt;apiVersion: v1 kind: PersistentVolumeClaim metadata: name: maven-repo-pvc spec: resources: requests: storage: 5Gi volumeMode: Filesystem accessModes: - ReadWriteOnce persistentVolumeReclaimPolicy: Retain &lt;/pre&gt; &lt;p&gt;Now you can create a pipeline run that uses the above PVC as the pipeline&amp;#8217;s workspace:&lt;/p&gt; &lt;pre&gt;apiVersion: tekton.dev/v1alpha1 kind: PipelineRun metadata: generateName: petclinic-run- spec: pipelineRef: name: maven-build resources: - name: app-git resourceSpec: type: git params: - name: url value: https://github.com/spring-projects/spring-petclinic workspaces: - name: local-maven-repo persistentVolumeClaim: claimName: maven-repo-pvc &lt;/pre&gt; &lt;p&gt;Notice the mapping between the &lt;code&gt;maven-repo-pvc&lt;/code&gt; PVC and the workspace that is declared for caching maven dependencies. As a result, this PVC is passed to the pipeline and to the respective tasks as the shared volume for caching files and artifacts.&lt;/p&gt; &lt;p&gt;Since it’s the first time this Maven goal runs, the pipeline run will take time to download dependencies and finish the execution:&lt;/p&gt; &lt;pre&gt;$ tkn pr list NAME STARTED DURATION STATUS petclinic-run-6l5w7 16 minutes ago 9 minutes Succeeded &lt;/pre&gt; &lt;p&gt;You can see here that the pipeline run took about nine minutes to complete in my environment. You can also get a breakdown of how long the execution of each task took (also see Figure 3):&lt;/p&gt; &lt;pre&gt;$ tkn pr describe petclinic-run-6l5w7 ... Taskruns NAME TASK NAME STARTED DURATION STATUS ∙ petclinic-run-6l5w7-gen-report-s6mhf gen-report 16 minutes ago 4 minutes Succeeded ∙ petclinic-run-6l5w7-int-test-8tbkn int-test 16 minutes ago 2 minutes Succeeded ∙ petclinic-run-6l5w7-build-4gg4l build 21 minutes ago 4 minutes Succeeded &lt;/pre&gt; &lt;div id="attachment_683437" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-683437" class="wp-image-683437 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/image3-1024x365.png" alt="Red Hat OpenShift Container Platform -&amp;#62; Developer -&amp;#62; Pipelines screenshot" width="640" height="228" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/image3-1024x365.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/image3-300x107.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/image3-768x274.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-683437" class="wp-caption-text"&gt;Figure 3: Viewing your pipeline run results in Red Hat OpenShift Container Platform.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Re-run the pipeline once more by applying (through &lt;code&gt;kubectl create&lt;/code&gt;) the &lt;code&gt;pipelinerun&lt;/code&gt; YAML once more and observe the execution time:&lt;/p&gt; &lt;pre&gt;$ tkn pr list NAME STARTED DURATION STATUS petclinic-run-qb64z 7 minutes ago 4 minutes Succeeded petclinic-run-6l5w7 40 minutes ago 9 minutes Succeeded &lt;/pre&gt; &lt;p&gt;Notice the significant reduction in the execution time to about four minutes in my environment. The breakdown of task execution time can show the effect more accurately:&lt;/p&gt; &lt;pre&gt;$ tkn pr describe petclinic-run-qb64z ... Taskruns NAME TASK NAME STARTED DURATION STATUS ∙ petclinic-run-qb64z-int-test-ppwgc int-test 4 minutes ago 2 minutes Succeeded ∙ petclinic-run-qb64z-gen-report-mhhmj gen-report 4 minutes ago 2 minutes Succeeded ∙ petclinic-run-qb64z-build-ck7cp build 5 minutes ago 1 minute Succeeded &lt;/pre&gt; &lt;p&gt;The test task run wasn&amp;#8217;t affected much because it uses most of the same dependencies that were downloaded in the build task run even in the first pipeline run, as you can see in Figures 4 and 5.&lt;/p&gt; &lt;div id="attachment_683417" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-683417" class="wp-image-683417 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/image1-1024x460.png" alt="Red Hat OpenShift Container Platform -&amp;#62; Developer -&amp;#62; Pipelines -&amp;#62; Pipeline Details" width="640" height="288" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/image1-1024x460.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/image1-300x135.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/image1-768x345.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-683417" class="wp-caption-text"&gt;Figure 4: Comparing the pipeline details for the two runs.&lt;/p&gt;&lt;/div&gt; &lt;div id="attachment_683457" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-683457" class="wp-image-683457 size-large" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/image5-1024x444.png" alt="Red Hat OpenShift Container Platform -&amp;#62; Developer -&amp;#62; Pipelines -&amp;#62; Pipeline Runs -&amp;#62; Pipeline Run Details" width="640" height="278" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/image5-1024x444.png 1024w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/image5-300x130.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/image5-768x333.png 768w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;p id="caption-attachment-683457" class="wp-caption-text"&gt;Figure 5: Viewing the pipeline run overview.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;Workspace support in Tekton 0.10 simplifies sharing files and artifacts between tasks in a pipeline, such as passing a JAR file from one task to another, or caching build dependencies as demonstrated in this article. Nevertheless, that’s just the beginning of what Tekton can do, and the Tekton community is developing improvements for the workspace user experience by bringing support to TektonCD CLI.&lt;/p&gt; &lt;h2&gt;Try it out&lt;/h2&gt; &lt;p&gt;All files used in this article are available in the following GitHub repository:&lt;br /&gt; &lt;a href="https://github.com/siamaksade/tekton-pipelines-maven-demo" target="_blank" rel="noopener noreferrer"&gt;https://github.com/siamaksade/tekton-pipelines-maven-demo&lt;/a&gt;. To use them, download and install &lt;a href="https://developers.redhat.com/products/codeready-containers/overview"&gt;CodeReady Containers&lt;/a&gt; and &lt;a href="https://github.com/tektoncd/cli/releases" target="_blank" rel="noopener noreferrer"&gt;TektonCD CLI&lt;/a&gt; on your workstation, and then install the &lt;a href="https://openshift.github.io/pipelines-docs/docs/0.8/proc_installing-pipelines-operator-in-web-console.html" target="_blank" rel="noopener noreferrer"&gt;OpenShift Pipelines Operator&lt;/a&gt; from the &lt;code&gt;canary&lt;/code&gt; operator channel to enable Tekton Pipelines 0.10 on the platform.&lt;/p&gt; &lt;p&gt;Thereafter, run the following commands to create the pipeline:&lt;/p&gt; &lt;pre&gt;$ oc create -f pvc.yaml $ oc create -f maven-task.yaml $ oc create -f maven-pipeline.yaml $ oc create -f maven-pipelinerun.yaml &lt;/pre&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fspeed-up-maven-builds-in-tekton-pipelines%2F&amp;#38;linkname=Speed%20up%20Maven%20builds%20in%20Tekton%20Pipelines" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fspeed-up-maven-builds-in-tekton-pipelines%2F&amp;#38;linkname=Speed%20up%20Maven%20builds%20in%20Tekton%20Pipelines" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fspeed-up-maven-builds-in-tekton-pipelines%2F&amp;#38;linkname=Speed%20up%20Maven%20builds%20in%20Tekton%20Pipelines" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fspeed-up-maven-builds-in-tekton-pipelines%2F&amp;#38;linkname=Speed%20up%20Maven%20builds%20in%20Tekton%20Pipelines" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fspeed-up-maven-builds-in-tekton-pipelines%2F&amp;#38;linkname=Speed%20up%20Maven%20builds%20in%20Tekton%20Pipelines" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fspeed-up-maven-builds-in-tekton-pipelines%2F&amp;#38;linkname=Speed%20up%20Maven%20builds%20in%20Tekton%20Pipelines" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fspeed-up-maven-builds-in-tekton-pipelines%2F&amp;#38;linkname=Speed%20up%20Maven%20builds%20in%20Tekton%20Pipelines" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F26%2Fspeed-up-maven-builds-in-tekton-pipelines%2F&amp;#038;title=Speed%20up%20Maven%20builds%20in%20Tekton%20Pipelines" data-a2a-url="https://developers.redhat.com/blog/2020/02/26/speed-up-maven-builds-in-tekton-pipelines/" data-a2a-title="Speed up Maven builds in Tekton Pipelines"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/02/26/speed-up-maven-builds-in-tekton-pipelines/"&gt;Speed up Maven builds in Tekton Pipelines&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/uhVVkpYW8IQ" height="1" width="1" alt=""/&gt;</content><summary>Tekton is an open source project that provides standard Kubernetes-style resources and building blocks for creating CI/CD pipelines that can run on any Kubernetes. Tekton does this by introducing a number of custom resource definitions (CRD) such as Pipeline, Task, and ClusterTask to provide a language and structure for defining delivery pipelines as shown in Figure 1. Tekton also provides a set o...</summary><dc:creator>Siamak Sadeghianfar</dc:creator><dc:date>2020-02-26T08:00:07Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/02/26/speed-up-maven-builds-in-tekton-pipelines/</feedburner:origLink></entry><entry><title>How to ignore files in Git without .gitignore</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ckTd92emoho/" /><category term=".gitignore" scheme="searchisko:content:tags" /><category term="accidental file check-in" scheme="searchisko:content:tags" /><category term="developer security" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="git" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="open source" scheme="searchisko:content:tags" /><author><name>Heiko Rupp</name></author><id>searchisko:content:id:jbossorg_blog-how_to_ignore_files_in_git_without_gitignore</id><updated>2020-02-25T08:00:43Z</updated><published>2020-02-25T08:00:43Z</published><content type="html">&lt;p&gt;Git has a handy feature when it comes to preventing accidental file check-ins when the files are meant to stay local. The obvious candidates are compiled binaries when you only want to check in the source code. Other candidates are files with local configurations.&lt;/p&gt; &lt;p&gt;One can put all of those files and paths into a &lt;code&gt;.gitignore&lt;/code&gt; file in the project. To persist those changes (and to share the common file contents with collaborators on the project), one usually adds the &lt;code&gt;.gitignore&lt;/code&gt; file to Git like any other file in the project.&lt;/p&gt; &lt;h2&gt;The problem&lt;/h2&gt; &lt;p&gt;Unfortunately, there are limits to this approach. &lt;span id="more-681437"&gt;&lt;/span&gt;Putting local files into the &lt;code&gt;.gitignore&lt;/code&gt; file only works well with items that are common for all collaborators, such as files and directories within the project. Just imagine what would happen if hundreds of collaborators put their specific paths into &lt;code&gt;.gitignore&lt;/code&gt;. That practice would create a huge mess and churn.&lt;/p&gt; &lt;p&gt;Adding file names and paths can also reveal information that should not be public. It could, for example, reveal customer information (this issue is not only about file contents, but also about the customer&amp;#8217;s name, which can reveal information as metadata).&lt;/p&gt; &lt;p&gt;Just not checking in the &lt;code&gt;.gitignore&lt;/code&gt; file can be a pain as well. When one is switching branches or updating the local working tree, one has to often &lt;a href="https://git-scm.com/docs/git-stash" target="_blank" rel="noopener noreferrer"&gt;stash&lt;/a&gt; the file (with local changes), switch the branch, or update and then unstash (potentially with merge conflicts).&lt;/p&gt; &lt;h2&gt;Help is available&lt;/h2&gt; &lt;p&gt;Luckily, Git offers alternative ways to prevent accidental file check-ins. For example, the file &lt;code&gt;.git/info/exclude&lt;/code&gt; works just like &lt;code&gt;.gitignore&lt;/code&gt; on a per-project base. If you need to ignore certain file patterns (e.g., backup files for an exotic editor), you can even use a per-user file like &lt;code&gt;~/.config/git/ignore&lt;/code&gt;. The cool thing is that these files live in areas that Git does not examine. Git will thus not add them to the changeset, so it will not commit and push to a remote.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note:&lt;/strong&gt; These other two files use the &lt;code&gt;.gitignore&lt;/code&gt;format, so you can use wildcards in those as well.&lt;/p&gt; &lt;h2&gt;Listing ignored files&lt;/h2&gt; &lt;p&gt;Git would not be Git if it did not have commands that help you determine if a file or directory is ignored. The first of these commands is &lt;a href="https://git-scm.com/docs/git-ls-files"&gt;&lt;code&gt;git ls-files&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;$ git ls-files --others --exclude-from=.gitignore $ git ls-files --others --exclude-from=.git/info/exclude&lt;/pre&gt; &lt;p&gt;The &lt;code&gt;--others&lt;/code&gt; argument tells the command to show files that are not in the index, and the &lt;code&gt;--exclude-from&lt;/code&gt; is a filter to not show files from its parameter. Thus, the first version shows thus the ignored files that are not listed in the &lt;code&gt;.gitignore&lt;/code&gt; file.&lt;/p&gt; &lt;p&gt;Another helpful command is &lt;a href="https://git-scm.com/docs/git-check-ignore"&gt;&lt;code&gt;git check-ignore&lt;/code&gt;&lt;/a&gt;, which requires a path argument. It returns the file name and an exit code of 0 on success. Otherwise, this command exits with a code of 1 if the argument is not in one of the ignore files.&lt;/p&gt; &lt;p&gt;Git has a large set of manual pages that can help you with the commands and files. Most notably for our purpose, you will want to focus on the &lt;a href="https://git-scm.com/docs/gitignore"&gt;&lt;code&gt;gitignore(5)&lt;/code&gt;&lt;/a&gt; page.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F25%2Fhow-to-ignore-files-in-git-without-gitignore%2F&amp;#38;linkname=How%20to%20ignore%20files%20in%20Git%20without%20.gitignore" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F25%2Fhow-to-ignore-files-in-git-without-gitignore%2F&amp;#38;linkname=How%20to%20ignore%20files%20in%20Git%20without%20.gitignore" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F25%2Fhow-to-ignore-files-in-git-without-gitignore%2F&amp;#38;linkname=How%20to%20ignore%20files%20in%20Git%20without%20.gitignore" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F25%2Fhow-to-ignore-files-in-git-without-gitignore%2F&amp;#38;linkname=How%20to%20ignore%20files%20in%20Git%20without%20.gitignore" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F25%2Fhow-to-ignore-files-in-git-without-gitignore%2F&amp;#38;linkname=How%20to%20ignore%20files%20in%20Git%20without%20.gitignore" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F25%2Fhow-to-ignore-files-in-git-without-gitignore%2F&amp;#38;linkname=How%20to%20ignore%20files%20in%20Git%20without%20.gitignore" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F25%2Fhow-to-ignore-files-in-git-without-gitignore%2F&amp;#38;linkname=How%20to%20ignore%20files%20in%20Git%20without%20.gitignore" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F25%2Fhow-to-ignore-files-in-git-without-gitignore%2F&amp;#038;title=How%20to%20ignore%20files%20in%20Git%20without%20.gitignore" data-a2a-url="https://developers.redhat.com/blog/2020/02/25/how-to-ignore-files-in-git-without-gitignore/" data-a2a-title="How to ignore files in Git without .gitignore"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/02/25/how-to-ignore-files-in-git-without-gitignore/"&gt;How to ignore files in Git without .gitignore&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ckTd92emoho" height="1" width="1" alt=""/&gt;</content><summary>Git has a handy feature when it comes to preventing accidental file check-ins when the files are meant to stay local. The obvious candidates are compiled binaries when you only want to check in the source code. Other candidates are files with local configurations. One can put all of those files and paths into a .gitignore file in the project. To persist those changes (and to share the common file ...</summary><dc:creator>Heiko Rupp</dc:creator><dc:date>2020-02-25T08:00:43Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/02/25/how-to-ignore-files-in-git-without-gitignore/</feedburner:origLink></entry><entry><title>Byteman 4.0.11 has been released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/T13SaiHnbwM/byteman-4011-has-been-released.html" /><category term="feed_group_name_byteman" scheme="searchisko:content:tags" /><category term="feed_name_byteman" scheme="searchisko:content:tags" /><author><name>Andrew Dinn</name></author><id>searchisko:content:id:jbossorg_blog-byteman_4_0_11_has_been_released</id><updated>2020-02-24T17:20:00Z</updated><published>2020-02-24T17:20:00Z</published><content type="html">Byteman 4.0.11 is now available from the &lt;a href="http://www.jboss.org/byteman/downloads"&gt;Byteman downloads page&lt;/a&gt; and from the &lt;a href="https://oss.sonatype.org/index.html#nexus-search;quick%7Ebyteman"&gt;Maven Central repository&lt;/a&gt;. It is the latest update release for use on all JDK9+ runtimes. It is also recommended as the preferred release for use on JDK8- runtimes.&lt;br /&gt;&lt;br /&gt;Byteman 4.0.11 is a maintenance release which fixes a build issue introduced in 4.0.10 and corrects a few minor errors in the rule parser. More details are provided in the &lt;a href="http://downloads.jboss.org/byteman/latest/ReleaseNotes.txt"&gt;Release Notes&lt;/a&gt;.&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/T13SaiHnbwM" height="1" width="1" alt=""/&gt;</content><summary>Byteman 4.0.11 is now available from the Byteman downloads page and from the Maven Central repository. It is the latest update release for use on all JDK9+ runtimes. It is also recommended as the preferred release for use on JDK8- runtimes. Byteman 4.0.11 is a maintenance release which fixes a build issue introduced in 4.0.10 and corrects a few minor errors in the rule parser. More details are pro...</summary><dc:creator>Andrew Dinn</dc:creator><dc:date>2020-02-24T17:20:00Z</dc:date><feedburner:origLink>http://bytemanblog.blogspot.com/2020/02/byteman-4011-has-been-released.html</feedburner:origLink></entry><entry><title>Infinispan Operator 1.1.1 is out!</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/6ZF36e4j84Y/" /><category term="feed_group_name_infinispan" scheme="searchisko:content:tags" /><category term="feed_name_infinispan" scheme="searchisko:content:tags" /><category term="operator" scheme="searchisko:content:tags" /><category term="release" scheme="searchisko:content:tags" /><author><name>Vittorio Rigamonti</name></author><id>searchisko:content:id:jbossorg_blog-infinispan_operator_1_1_1_is_out</id><updated>2020-02-27T16:13:18Z</updated><published>2020-02-24T12:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We’re pleased to announce &lt;a href="https://operatorhub.io/operator/infinispan"&gt;version 1.1.1 of the Infinispan Operator&lt;/a&gt; for Kubernetes and OpenShift.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;This release has focused on fixing bugs and improving robustness, mainly related to the following:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;improving reconcile flow stability&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;reducing Operator CPU load&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;cleaning up logs&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Our community documentation on &lt;a href="https://infinispan.org/documentation" class="bare"&gt;https://infinispan.org/documentation&lt;/a&gt; has also been updated and improved. You can find some of the changes at:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://infinispan.org/infinispan-operator/master/operator.html#creating_services"&gt;Creating Infinispan Services&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://infinispan.org/infinispan-operator/master/operator.html#network_services"&gt;Setting Up Network Services&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://infinispan.org/infinispan-operator/master/operator.html#prometheus"&gt;Monitoring Infinispan with Prometheus&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://infinispan.org/infinispan-operator/master/operator.html#remote_connections"&gt;Connecting to Infinispan Clusters&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_automatic_upgrades"&gt;&lt;a class="anchor" href="#_automatic_upgrades"&gt;&lt;/a&gt;Automatic Upgrades&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you installed the Infinispan Operator on Red Hat OpenShift with the Automatic Approval upgrade policy, your cluster should already be running the latest versions (Infinispan Operator 1.1.1 with Infinispan 10.1.2.Final).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We would like to hear opinions from you about the automated upgrade process, so get in touch if you have any issues or want to give any feedback.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="_get_it_use_it_ask_us"&gt;&lt;a class="anchor" href="#_get_it_use_it_ask_us"&gt;&lt;/a&gt;Get it, Use it, Ask us!&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Try the &lt;a href="https://github.com/infinispan/infinispan-simple-tutorials/tree/master/operator"&gt;simple tutorial&lt;/a&gt; for the Operator, which has been updated for this version.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;You can &lt;a href="https://github.com/infinispan/infinispan-operator/issues"&gt;report bugs&lt;/a&gt;, &lt;a href="https://infinispan.zulipchat.com/"&gt;chat with us&lt;/a&gt;, ask questions on &lt;a href="https://stackoverflow.com/questions/tagged/?tagnames=infinispan&amp;amp;sort=newest"&gt;StackOverflow&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Finally, a detailed list of issues and features for this version can be found &lt;a href="https://github.com/infinispan/infinispan-operator/issues?q=milestone%3A1.1.1+is%3Aclosed"&gt;here&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/6ZF36e4j84Y" height="1" width="1" alt=""/&gt;</content><summary>We’re pleased to announce version 1.1.1 of the Infinispan Operator for Kubernetes and OpenShift. This release has focused on fixing bugs and improving robustness, mainly related to the following: improving reconcile flow stability reducing Operator CPU load cleaning up logs Our community documentation on https://infinispan.org/documentation has also been updated and improved. You can find some of ...</summary><dc:creator>Vittorio Rigamonti</dc:creator><dc:date>2020-02-24T12:00:00Z</dc:date><feedburner:origLink>http://infinispan.org/blog/2020/02/24/2020-02-24-infinispan-operator-1.1.1/</feedburner:origLink></entry><entry><title>C# 8 asynchronous streams</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/N8wVBkCSFE0/" /><category term=".net" scheme="searchisko:content:tags" /><category term=".NET Core" scheme="searchisko:content:tags" /><category term=".NET Core 3.1 SDK" scheme="searchisko:content:tags" /><category term="async streams" scheme="searchisko:content:tags" /><category term="asynchronous enumerables" scheme="searchisko:content:tags" /><category term="C#" scheme="searchisko:content:tags" /><category term="C# 8" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><author><name>Tom Deseyn</name></author><id>searchisko:content:id:jbossorg_blog-c_8_asynchronous_streams</id><updated>2020-02-24T08:00:25Z</updated><published>2020-02-24T08:00:25Z</published><content type="html">&lt;p&gt;.NET Core 3.1 (December 2019) includes support for C# 8, a new major&lt;br /&gt; version of the C# programming language. In this series of articles,&lt;br /&gt; we&amp;#8217;ll look at the new features in .NET&amp;#8217;s main programming language. This first article, in particular, looks at asynchronous streams. This feature makes it easy to create and consume asynchronous enumerables, so before getting into the new feature, you first need to understand the IEnumerable interface.&lt;/p&gt; &lt;p style="padding-left: 40px;"&gt;&lt;strong&gt;Note:&lt;/strong&gt; C# 8 can be used with the .NET Core 3.1 SDK, which is available on &lt;a href="https://access.redhat.com/documentation/en-us/net_core/"&gt;Red Hat Enterprise Linux&lt;/a&gt;, &lt;a href="http://fedoraloves.net/"&gt;Fedora&lt;/a&gt;, &lt;a href="https://dotnet.microsoft.com/download" target="_blank" rel="noopener noreferrer"&gt;Windows, macOS, and on other Linux distributions&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;A brief history of IEnumerable&lt;/h2&gt; &lt;p&gt;The classic &lt;code&gt;IEnumerable&amp;#60;T&amp;#62;&lt;/code&gt; has been around since .NET Framework 2 (2005). This interface provides us with a type-safe way to iterate over any collection.&lt;/p&gt; &lt;p&gt;The iteration is based on the &lt;code&gt;IEnumerator&amp;#60;T&amp;#62;&lt;/code&gt; type:&lt;/p&gt; &lt;p&gt;&lt;span id="more-676487"&gt;&lt;/span&gt;&lt;/p&gt; &lt;pre&gt;public interface IEnumerator&amp;#60;T&amp;#62; : IDisposable { bool MoveNext(); T Current; void Reset(); } &lt;/pre&gt; &lt;p&gt;You can see that the &lt;code&gt;MoveNext&lt;/code&gt; method moves us to the next element. It returns &lt;code&gt;true&lt;/code&gt; when there &lt;em&gt;is&lt;/em&gt; an element, and then &lt;code&gt;Current&lt;/code&gt; returns that element. The &lt;code&gt;Reset&lt;/code&gt; method provides a way to reset the iterator to the start. The &lt;code&gt;IEnumerable&amp;#60;T&amp;#62;&lt;/code&gt; is &lt;code&gt;IDisposable&lt;/code&gt;, so its implementation might perform resource cleanup. Note that the generic parameter is an &lt;code&gt;out&lt;/code&gt;-parameter. This keyword enables casting the &lt;code&gt;IEnumerable&amp;#60;T&amp;#62;&lt;/code&gt; to a base type &lt;code&gt;IEnumerable&amp;#60;TBase&amp;#62;&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;The &lt;code&gt;foreach&lt;/code&gt; keyword allows the easy consumption of &lt;code&gt;IEnumerables&lt;/code&gt;.&lt;/p&gt; &lt;pre&gt;foreach (var item in myEnumerable) Console.WriteLine($”* {item}”); &lt;/pre&gt; &lt;p&gt;The &lt;code&gt;yield&lt;/code&gt; keyword makes it easy to implement an &lt;code&gt;IEnumerable&amp;#60;T&amp;#62;&lt;/code&gt; with a method, and lets the compiler figure out how to implement the interface. For example:&lt;/p&gt; &lt;pre&gt;IEnumerable&amp;#60;int&amp;#62; MyEnumerable { get { for (int i = 0; i &amp;#60; 3; i++) yield return i; yield return 100; } } &lt;/pre&gt; &lt;p&gt;This code causes the compiler to generate a type that implements &lt;code&gt;IEnumerable&amp;#60;int&amp;#62;&lt;/code&gt;, which tracks enough information to know where we are in the &lt;code&gt;[0, 1, 2, 100]&lt;/code&gt; iteration.&lt;/p&gt; &lt;p&gt;The power of &lt;code&gt;IEnumerable&amp;#60;T&amp;#62;&lt;/code&gt; shines with C# 3&amp;#8217;s Language-Integrated Query (2007) which allows &lt;code&gt;IEnumerable&amp;#60;T&amp;#62;&lt;/code&gt; to be transformed, combined and filtered. For example:&lt;/p&gt; &lt;pre&gt;var queryLondonCustomers = from cust in customers where cust.City == "London" select cust.Name; &lt;/pre&gt; &lt;p&gt;The &lt;code&gt;customers&lt;/code&gt; in this example refer to an &lt;code&gt;IEnumerable&amp;#60;Customer&amp;#62;&lt;/code&gt;. We filter by city, which gives us (again) an &lt;code&gt;IEnumerable&amp;#60;Customer&amp;#62;&lt;/code&gt;. Then, finally, we select the name so our resulting type is an &lt;code&gt;IEnumerable&amp;#60;string&amp;#62;&lt;/code&gt;.&lt;/p&gt; &lt;h2&gt;Asynchronous streams&lt;/h2&gt; &lt;p&gt;Asynchronous streams use the &lt;code&gt;IAsyncEnumerator&amp;#60;T&amp;#62;&lt;/code&gt; type. This type is similar to &lt;code&gt;IEnumerator&amp;#60;T&amp;#62;&lt;/code&gt;, but with a &lt;code&gt;Move&lt;/code&gt; method that is async (it returns a &lt;code&gt;Task&lt;/code&gt;-like type):&lt;/p&gt; &lt;pre&gt;ValueTask&amp;#60;T&amp;#62; MoveNextAsync(); &lt;/pre&gt; &lt;p&gt;Thanks to the async &lt;code&gt;Move&lt;/code&gt; method, we can now asynchronously wait for the next item. This means that we can wait without blocking a thread. Note that the method returns a &lt;code&gt;ValueTask&lt;/code&gt;, which makes the call allocation-free when the next item is already available. You can read more about &lt;code&gt;ValueTask&lt;/code&gt; in &lt;a href="https://devblogs.microsoft.com/dotnet/understanding-the-whys-whats-and-whens-of-valuetask/" target="_blank" rel="noopener noreferrer"&gt;Understanding the Whys, Whats, and Whens of ValueTask&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;code&gt;IAsyncEnumerable&amp;#60;T&amp;#62;&lt;/code&gt; is a good match for events that happen infrequently, or data that is received asynchronously (for example, over the network). Because the &lt;code&gt;IAsyncEnumerable&lt;/code&gt; knows at what rate we are pulling the items, it can be smart about how much data it buffers, and when it asks the upstream source for more data.&lt;/p&gt; &lt;p&gt;As with &lt;code&gt;IEnumerable&amp;#60;T&amp;#62;&lt;/code&gt;, C# provides first-class support for implementing &lt;code&gt;IAsyncEnumerables&lt;/code&gt;. For example:&lt;/p&gt; &lt;pre&gt;static async IAsyncEnumerable&amp;#60;string&amp;#62; GetTopSearchResults(string term) { using var client = new HttpClient(); yield return await client.GetStringAsync($"https://www.google.com?q={term}"); yield return await client.GetStringAsync($"https://www.bing.com?q={term}"); } &lt;/pre&gt; &lt;p&gt;For consuming, we use the &lt;code&gt;await foreach&lt;/code&gt; keyword as you can see in this example:&lt;/p&gt; &lt;pre&gt;await foreach (var item in GetTopSearchResults("test")) { System.Console.WriteLine(item); } &lt;/pre&gt; &lt;h1&gt;Cancellation&lt;/h1&gt; &lt;p&gt;The default pattern for canceling asynchronous methods is by using a &lt;code&gt;CancellationToken&lt;/code&gt;. We can add a &lt;code&gt;CancellationToken&lt;/code&gt; to our method like so:&lt;/p&gt; &lt;pre&gt;static async IAsyncEnumerable GetTopSearchResults(string term, [EnumeratorCancellation]CancellationToken ct = default) { using var client = new HttpClient(); // GetStringAsync doesn't accept a CancellationToken, Dispose the client to cancel. using var ctr = ct.Register(s =&amp;#62; ((HttpClient)s).Dispose(), client); yield return await client.GetStringAsync($"https://www.google.com?q={term}"); yield return await client.GetStringAsync($"https://www.bing.com?q={term}"); } &lt;/pre&gt; &lt;p&gt;We can pass the &lt;code&gt;CancellationToken&lt;/code&gt; as an argument when we invoke the method:&lt;/p&gt; &lt;pre&gt;var cts = new CancellationTokenSource(millisecondsDelay: 1000); await foreach (var result in GetTopSearchResults("dotnet", cts.Token)) &lt;/pre&gt; &lt;p&gt;Or alternatively, we can use the &lt;code&gt;WithCancellation&lt;/code&gt; method, which makes the compiler pass the value to the argument with the &lt;code&gt;EnumeratorCancellation&lt;/code&gt; attribute. For example:&lt;/p&gt; &lt;pre&gt;var cts = new CancellationTokenSource(millisecondsDelay: 1000); await foreach (var result in GetTopSearchResults("dotnet").WithCancellation(cts.Token)) &lt;/pre&gt; &lt;h2&gt;&lt;code&gt;ConfigureAwait(false)&lt;/code&gt;&lt;/h2&gt; &lt;p&gt;When an async method completes asynchronously, it uses the invocation &lt;code&gt;SynchronizationContext&lt;/code&gt; to continue. This feature puts us back into the main UI thread when invoking an async method in a Win32 Forms/WPF application. It facilitates GUI programming because UI controls should only be updated from the UI thread. When this feature is not needed, the overhead can be avoided by adding &lt;code&gt;ConfigureAwait(false)&lt;/code&gt; to the task that is awaited, as you can see here:&lt;/p&gt; &lt;pre&gt;await SomeMethodAsync().ConfigureAwait(false); &lt;/pre&gt; &lt;p&gt;We can apply &lt;code&gt;ConfigureAwait(false)&lt;/code&gt; to the &lt;code&gt;MoveNextAsync&lt;/code&gt; calls that are generated by the &lt;code&gt;foreach&lt;/code&gt; statement like this:&lt;/p&gt; &lt;pre&gt;await foreach (var result in GetTopSearchResults("dotnet").ConfigureAwait(false)) &lt;/pre&gt; &lt;p&gt;Note that this option applies to the &lt;code&gt;MoveNextAsync&lt;/code&gt; calls. You should also add &lt;code&gt;ConfigureAwait(false)&lt;/code&gt; to the awaited methods inside the &lt;code&gt;GetTopSearchResults&lt;/code&gt; method.&lt;/p&gt; &lt;h1&gt;Conclusion&lt;/h1&gt; &lt;p&gt;In this article, you’ve learned how C# 8 async streams makes it easy to create and consume asynchronous enumerables. Async streams is an interesting feature, especially for applications that are consuming data/events that are received from the network. In the next article in this series, we will look at C# 8&amp;#8217;s extended pattern matching.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F24%2Fc-8-asynchronous-streams%2F&amp;#38;linkname=C%23%208%20asynchronous%20streams" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F24%2Fc-8-asynchronous-streams%2F&amp;#38;linkname=C%23%208%20asynchronous%20streams" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F24%2Fc-8-asynchronous-streams%2F&amp;#38;linkname=C%23%208%20asynchronous%20streams" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F24%2Fc-8-asynchronous-streams%2F&amp;#38;linkname=C%23%208%20asynchronous%20streams" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F24%2Fc-8-asynchronous-streams%2F&amp;#38;linkname=C%23%208%20asynchronous%20streams" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F24%2Fc-8-asynchronous-streams%2F&amp;#38;linkname=C%23%208%20asynchronous%20streams" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F24%2Fc-8-asynchronous-streams%2F&amp;#38;linkname=C%23%208%20asynchronous%20streams" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F24%2Fc-8-asynchronous-streams%2F&amp;#038;title=C%23%208%20asynchronous%20streams" data-a2a-url="https://developers.redhat.com/blog/2020/02/24/c-8-asynchronous-streams/" data-a2a-title="C# 8 asynchronous streams"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/02/24/c-8-asynchronous-streams/"&gt;C# 8 asynchronous streams&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/N8wVBkCSFE0" height="1" width="1" alt=""/&gt;</content><summary>.NET Core 3.1 (December 2019) includes support for C# 8, a new major version of the C# programming language. In this series of articles, we’ll look at the new features in .NET’s main programming language. This first article, in particular, looks at asynchronous streams. This feature makes it easy to create and consume asynchronous enumerables, so before getting into the new feature, you first need...</summary><dc:creator>Tom Deseyn</dc:creator><dc:date>2020-02-24T08:00:25Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/02/24/c-8-asynchronous-streams/</feedburner:origLink></entry><entry><title>Begginners Guide - Expanding your DevOps toolbox workshop</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/3yVup04xGCI/beginners-guilde-expanding-your-devops-toolbox-workshop.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="Automate" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="Process Automation Manager" scheme="searchisko:content:tags" /><category term="workshops" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-begginners_guide_expanding_your_devops_toolbox_workshop</id><updated>2020-02-24T06:00:04Z</updated><published>2020-02-24T06:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;a href="https://bpmworkshop.gitlab.io/rhpam-devops-workshop/#/" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;" target="_blank"&gt;&lt;img alt="devops beginners guide" border="1" data-original-height="597" data-original-width="1600" height="119" src="https://1.bp.blogspot.com/-CgClKmzwRP0/Xk5k40_FfWI/AAAAAAAAw5s/L_T5c9TfV0Iu1jWL-boikliD3S6pD8gUACEwYBhgL/s320/Screenshot%2B2020-02-20%2Bat%2B11.50.59.png" title="" width="320" /&gt;&lt;/a&gt;The last few months there have been a series of updates to the various open source process automation technologies shared with you over the years in beginners guide workshops.&lt;br /&gt;&lt;br /&gt;These updates require updates to workshop content ensuring you have material that helps with getting hands-on with the latest technology versions.&lt;br /&gt;&lt;br /&gt;Recently, I shared &lt;a href="https://www.schabell.org/2020/02/beginners-guide-hr-rewards-process-automation-workshop.html" target="_blank"&gt;updates to the human resources employee rewards workshop&lt;/a&gt;, where you can get started with the beginners guide to learning about process automation.&lt;br /&gt;&lt;br /&gt;This article continues with another workshop update, one that's focused on sharing new tooling with DevOps communities. &lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;DevOps Heroes workshop&lt;/h3&gt;This workshop is designed to introduce you to a new tool for your devops toolbox. The goal is to install a process automation environment, and build a process automation project integrating DevOps testing into a fictional organization.&lt;br /&gt;&lt;br /&gt;&lt;a href="https://1.bp.blogspot.com/-bw0BtCuiFWs/Xk5nGXmUIsI/AAAAAAAAw58/WEQJfIkDDS0wNXPJWI5YNlWq7SGAwTz_gCNcBGAsYHQ/s1600/Screenshot%2B2020-02-20%2Bat%2B11.53.56.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="devops beginners guide" border="0" data-original-height="721" data-original-width="1600" height="144" src="https://1.bp.blogspot.com/-bw0BtCuiFWs/Xk5nGXmUIsI/AAAAAAAAw58/WEQJfIkDDS0wNXPJWI5YNlWq7SGAwTz_gCNcBGAsYHQ/s320/Screenshot%2B2020-02-20%2Bat%2B11.53.56.png" title="" width="320" /&gt;&lt;/a&gt;We'll introduce you along the way to the Red Hat Process Automation Manager and end up with a functional DevOps testing process.&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: left;"&gt;&lt;b&gt;&lt;a href="https://bpmworkshop.gitlab.io/rhpam-devops-workshop/#/7" target="_blank"&gt;Workshop contents&lt;/a&gt;&lt;/b&gt;&lt;/div&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;Lab 1 - Install Red Hat Process Automation Manager&lt;/li&gt;&lt;li&gt;Lab 2 - Create a new project&lt;/li&gt;&lt;li&gt;Lab 3 - Create a data model&lt;/li&gt;&lt;li&gt;Lab 4 - Create a guided rule&lt;/li&gt;&lt;li&gt;Lab 5 - Create a process&lt;/li&gt;&lt;li&gt;Lab 6 - Completing process details&lt;/li&gt;&lt;li&gt;Lab 7 - Creating process and task forms&lt;/li&gt;&lt;li&gt;Lab 8 - Running the process&lt;/li&gt;&lt;/ul&gt;With all the latest updates, links to downloads for all needed product tooling on Red Hat Developers, you'll be on your way to adding process automation to your DevOps toolbox in no time.&lt;br /&gt;&lt;br /&gt;If you have any comments and or suggestions while using the workshop, please &lt;a href="https://gitlab.com/bpmworkshop/rhpam-devops-workshop/issues/new" target="_blank"&gt;bring it to our attention&lt;/a&gt;. &lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=smy1upVpci8:qsI1YcsMQ-g:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=smy1upVpci8:qsI1YcsMQ-g:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=smy1upVpci8:qsI1YcsMQ-g:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=smy1upVpci8:qsI1YcsMQ-g:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=smy1upVpci8:qsI1YcsMQ-g:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=smy1upVpci8:qsI1YcsMQ-g:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=smy1upVpci8:qsI1YcsMQ-g:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=smy1upVpci8:qsI1YcsMQ-g:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=smy1upVpci8:qsI1YcsMQ-g:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=smy1upVpci8:qsI1YcsMQ-g:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=smy1upVpci8:qsI1YcsMQ-g:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/smy1upVpci8" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/3yVup04xGCI" height="1" width="1" alt=""/&gt;</content><summary>The last few months there have been a series of updates to the various open source process automation technologies shared with you over the years in beginners guide workshops. These updates require updates to workshop content ensuring you have material that helps with getting hands-on with the latest technology versions. Recently, I shared updates to the human resources employee rewards workshop, ...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2020-02-24T06:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/smy1upVpci8/beginners-guilde-expanding-your-devops-toolbox-workshop.html</feedburner:origLink></entry><entry><title>Designing an event-driven process at scale: Part 3</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/Slfbt02j8fQ/" /><category term="business process management" scheme="searchisko:content:tags" /><category term="Design Patterns" scheme="searchisko:content:tags" /><category term="digital process automation" scheme="searchisko:content:tags" /><category term="event-driven" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Java" scheme="searchisko:content:tags" /><category term="jBPM" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="RHPAM" scheme="searchisko:content:tags" /><author><name>mcarioli</name></author><id>searchisko:content:id:jbossorg_blog-designing_an_event_driven_process_at_scale_part_3</id><updated>2020-02-21T08:00:51Z</updated><published>2020-02-21T08:00:51Z</published><content type="html">&lt;p class="selectionShareable"&gt;In the first article in this series, &lt;a href="https://developers.redhat.com/blog/2020/02/19/designing-an-event-driven-business-process-at-scale-a-health-management-example-part-1/"&gt;&lt;em&gt;Designing an event-driven business process at scale: A health management example, Part 1&lt;/em&gt;&lt;/a&gt;, you found the business use case and data model for a concrete example from the health management industry. You then began implementing the example in &lt;a href="https://www.jbpm.org/" target="_blank" rel="noopener noreferrer"&gt;jBPM&lt;/a&gt; (an open source business automation suite) by creating the Trigger process.&lt;/p&gt; &lt;p&gt;In &lt;a href="https://developers.redhat.com/blog/2020/02/20/designing-an-event-driven-process-at-scale-part-2/"&gt;the second article&lt;/a&gt;, you implemented the Task subprocess and, among other things, you also configured the call parameters for the Reminder and Escalation subprocesses within the Task subprocess. Now you will implement these subprocesses.&lt;/p&gt; &lt;p&gt;&lt;span id="more-685887"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;The Reminder subprocess&lt;/h2&gt; &lt;p&gt;You should now create the email reminder subprocess with the properties shown in Figure 1.&lt;/p&gt; &lt;div id="attachment_686347" style="width: 355px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-686347" class="wp-image-686347 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Process-Fig-7.png" alt="jBPM Diagram properties section filled out for this subprocess" width="345" height="630" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Process-Fig-7.png 345w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Process-Fig-7-164x300.png 164w" sizes="(max-width: 345px) 100vw, 345px" /&gt;&lt;p id="caption-attachment-686347" class="wp-caption-text"&gt;Figure 1: Assigning properties to the email reminder subprocess.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;This subprocess needs the variables shown in Figure 2 to be defined.&lt;/p&gt; &lt;div id="attachment_686617" style="width: 346px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-686617" class="wp-image-686617 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Processes-Fig-8.png" alt="jBPM section defining the global and process variables for this subprocess" width="336" height="628" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Processes-Fig-8.png 336w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Processes-Fig-8-161x300.png 161w" sizes="(max-width: 336px) 100vw, 336px" /&gt;&lt;p id="caption-attachment-686617" class="wp-caption-text"&gt;Figure 2: Defining the variables for the email reminder subprocess.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Now, create the process diagram as shown in Figure 3.&lt;/p&gt; &lt;div id="attachment_686647" style="width: 650px" class="wp-caption aligncenter"&gt;&lt;a href="https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Processes-Fig-9.png"&gt;&lt;img aria-describedby="caption-attachment-686647" class="wp-image-686647" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Processes-Fig-9.png" alt="the email Reminder subprocess workflow diagram" width="640" height="427" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Processes-Fig-9.png 710w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Processes-Fig-9-300x200.png 300w" sizes="(max-width: 640px) 100vw, 640px" /&gt;&lt;/a&gt;&lt;p id="caption-attachment-686647" class="wp-caption-text"&gt;Figure 3: Create the email reminder subprocess workflow diagram.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;Next, you need the timer, which causes the email reminder to be executed at the frequency defined in the &lt;code&gt;reminderFrequency&lt;/code&gt; attribute of the &lt;code&gt;Task&lt;/code&gt; object, as shown in Figure 4.&lt;/p&gt; &lt;div id="attachment_686677" style="width: 444px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-686677" class="wp-image-686677 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Processes-Fig-16.png" alt="jBPM implementation section with the timer behavior defined" width="434" height="324" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Processes-Fig-16.png 434w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Processes-Fig-16-300x224.png 300w" sizes="(max-width: 434px) 100vw, 434px" /&gt;&lt;p id="caption-attachment-686677" class="wp-caption-text"&gt;Figure 4: Implementing the email reminder timer.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;The email reminder consists of the &lt;a href="https://github.com/kiegroup/jbpm/tree/master/jbpm-workitems/jbpm-workitems-email/src/main/java/org/jbpm/process/workitem/email" target="_blank" rel="noopener noreferrer"&gt;email custom work item handler&lt;/a&gt; that comes pre-installed in jBPM. You can see the service task parameters in Figure 5.&lt;/p&gt; &lt;div id="attachment_686707" style="width: 603px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-686707" class="wp-image-686707 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Processes-Fig-10.png" alt="jBPM Email Reminder Data I/O, Data Inputs and Assignments section with the values filled in." width="593" height="566" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Processes-Fig-10.png 593w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Processes-Fig-10-300x286.png 300w" sizes="(max-width: 593px) 100vw, 593px" /&gt;&lt;p id="caption-attachment-686707" class="wp-caption-text"&gt;Figure 5: Define the email reminder service task&amp;#8217;s parameters.&lt;/p&gt;&lt;/div&gt; &lt;p&gt;You can use &lt;a href="https://gist.github.com/mauriziocarioli/1f753e1de6ef7b15551c08e16a7ff801" target="_blank" rel="noopener noreferrer"&gt;the following on entry action&lt;/a&gt; to set the parameters for the email service task:&lt;/p&gt; &lt;pre&gt;Reminder r = (Reminder)kcontext.getVariable("_Reminder"); kcontext.setVariable("_To",r.getAddress()); kcontext.setVariable("_Subj",r.getSubject()); kcontext.setVariable("_Body",r.getBody()); kcontext.setVariable("_From",r.getFrom());&lt;/pre&gt; &lt;p&gt;Don&amp;#8217;t forget to catch the signal to stop the reminder, as shown in Figure 6.&lt;/p&gt; &lt;div id="attachment_686737" style="width: 435px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-686737" class="wp-image-686737 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Processes-Fig-12.png" alt="jBPM Implementation/Execution for Signal &amp;#34;stop_reminder&amp;#34;" width="425" height="203" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Processes-Fig-12.png 425w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Processes-Fig-12-300x143.png 300w" sizes="(max-width: 425px) 100vw, 425px" /&gt;&lt;p id="caption-attachment-686737" class="wp-caption-text"&gt;Figure 6: Capturing the email reminder&amp;#8217;s stop signal.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;The Escalation subprocess&lt;/h2&gt; &lt;p&gt;This process is the simplest of all. It&amp;#8217;s just a human task as you can see in Figure 7.&lt;/p&gt; &lt;div id="attachment_686747" style="width: 498px" class="wp-caption aligncenter"&gt;&lt;img aria-describedby="caption-attachment-686747" class="wp-image-686747 size-full" src="https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Processes-Fig-17.png" alt="Diagram showing the Escalation subprocess workflow" width="488" height="175" srcset="https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Processes-Fig-17.png 488w, https://developers.redhat.com/blog/wp-content/uploads/2020/02/PHM-Processes-Fig-17-300x108.png 300w" sizes="(max-width: 488px) 100vw, 488px" /&gt;&lt;p id="caption-attachment-686747" class="wp-caption-text"&gt;Figure 7: The Escalation subprocess.&lt;/p&gt;&lt;/div&gt; &lt;h2&gt;The Get the Data service&lt;/h2&gt; &lt;p&gt;The Get the Data service is implemented in the &lt;a href="https://expressjs.com/" target="_blank" rel="noopener noreferrer"&gt;Express&lt;/a&gt; framework on &lt;a href="https://nodejs.org/en/" target="_blank" rel="noopener noreferrer"&gt;node.js&lt;/a&gt; and can be cloned from &lt;a href="https://github.com/mauriziocarioli/PHM-API" target="_blank" rel="noopener noreferrer"&gt;GitHub&lt;/a&gt;. This is a simple REST service with hard-coded responses. Its only purpose is to be used in live demos of the business process described in this series. In a future article, I will show you how to implement this service using business rules. That way, this setting will no longer be hard-coded and it will be easy for nontechnical people to configure the &amp;#8220;triggers&amp;#8221; without involving developer work. Stay tuned!&lt;/p&gt; &lt;p&gt;Here is &lt;a href="https://gist.github.com/mauriziocarioli/bf8e2eca55ce1fa61a8edae7eb8d1c2f" target="_blank" rel="noopener noreferrer"&gt;the &lt;code&gt;app.js&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;const express = require('express') const app = express() const bodyparser = require('body-parser') const port = process.env.PORT || 3200 app.use(bodyparser.json()) app.use( bodyparser.urlencoded({ extended: false }) ) app.get('/get_trigger/:trigger_id/:member_id', (req, res) =&amp;#62; { res.status(200).send([ /** * Getting Provider Info */ { task: { id: 35, origId: 'A490.0', suppressed: false, suppressionPeriod: '', expirationDate: '2020-12-31T12:00:00.000Z', close: 'HARD', reminderInitiation: 'P15D', reminderFrequency: 'R/P15D', escalationTimer: 'P30D', description: 'Getting provider info' }, assignment: { actor: 'Peter', channel: 'MCC', escalationActor: 'Patricia', escalationChannel: 'CCN' }, reminder: { address: 'peter@doctor.com', body: 'XYZ', from: 'PHM@health_insurance.com', subject: 'Reminder' } }, /** * Getting Community Health Worker Info */ { task: { id: 58, origId: 'B143', suppressed: false, suppressionPeriod: '', expirationDate: '2020-12-31T12:00:00.000Z', close: 'HARD', reminderInitiation: 'P30D', reminderFrequency: 'R/P30D', // reminderInitiation : 'PT60S', // reminderFrequency : 'R/PT60S', escalationTimer: 'P90D', // escalationTimer : 'PT60S', decription: 'Getting Community Info' }, assignment: { actor: 'Charlie', channel: 'CCN', escalationActor: 'Marc', escalationChannel: 'CCN' }, reminder: { address: 'charlie@health_insurance.com', body: 'XYZ', from: 'PHM@health_insurance.com', subject: 'Reminder' } }, /** * Getting Member Info */ { task: { id: 128, origId: 'C201', predecessor: 'A490.0', suppressed: false, suppressionPeriod: '', expirationDate: '2020-12-31T12:00:00.000Z', close: 'SOFT', reminderInitiation: 'P7D', reminderFrequency: 'R/P7D', escalationTimer: 'P30D', description: 'Getting member info' }, assignment: { actor: 'Mary', channel: 'MLP', escalationActor: 'Charlie', escalationChannel: 'CCN' }, reminder: { address: 'mary@mail.com', body: 'XYZ', from: 'PHM@health_insurance.com', subject: 'Reminder' } }, /** * Getting Pharmacist Info */ { task: { id: 112, origId: 'C178', predecessor: 'A490.0', suppressed: false, suppressionPeriod: '', expirationDate: '2020-12-31T12:00:00.000Z', close: 'SOFT', reminderInitiation: 'P7D', reminderFrequency: 'R/P7D', escalationTimer: 'P30D', description: 'Geting member info' }, assignment: { actor: 'Robert', channel: 'CCN', escalationActor: 'Matthew', escalationChannel: 'CCN' }, reminder: { address: 'robert@pharmacy.com', body: 'XYZ', from: 'PHM@health_insurance.com', subject: 'Reminder' } } ]) }) app.listen(port, () =&amp;#62; { console.log(`running at port ${port}`) })&lt;/pre&gt; &lt;p&gt;and this is the deployment descriptor &lt;a href="https://gist.github.com/mauriziocarioli/040d6e57439d36fb89a6b9a25ed81392" target="_blank" rel="noopener noreferrer"&gt;in &lt;code&gt;src/main/resources/META-INF/kie-deployment-descriptor.xml&lt;/code&gt;&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&amp;#60;work-item-handler&amp;#62; &amp;#60;resolver&amp;#62;mvel&amp;#60;/resolver&amp;#62; &amp;#60;identifier&amp;#62;new org.jbpm.process.workitem.rest.RESTWorkItemHandler(System.getenv("DEMO_REST_USER"), System.getenv("DEMO_REST_PWD"))&amp;#60;/identifier&amp;#62; &amp;#60;parameters/&amp;#62; &amp;#60;name&amp;#62;Rest&amp;#60;/name&amp;#62; &amp;#60;/work-item-handler&amp;#62; &lt;/pre&gt; &lt;h3&gt;The Email service&lt;/h3&gt; &lt;div&gt;This is the deployment descriptor for the &lt;a href="https://gist.github.com/mauriziocarioli/4d75c14c508a1e801ff98b7b566326d5" target="_blank" rel="noopener noreferrer"&gt;Email service task&lt;/a&gt;:&lt;/div&gt; &lt;pre&gt;&amp;#60;work-item-handler&amp;#62; &amp;#60;resolver&amp;#62;mvel&amp;#60;/resolver&amp;#62; &amp;#60;identifier&amp;#62;new org.jbpm.process.workitem.email.EmailWorkItemHandler(System.getenv("DEMO_SMTP_SERVER"), System.getenv("DEMO_SMTP_PORT),System.getenv("DEMO_SMTP_USER"),System.getenv("DEMO_SMTP_PWD"))&amp;#60;/identifier&amp;#62; &amp;#60;parameters/&amp;#62; &amp;#60;name&amp;#62;Email&amp;#60;/name&amp;#62; &amp;#60;/work-item-handler&amp;#62;&lt;/pre&gt; &lt;div&gt;The SMTP server parameters are passed from the environment variables. When trying this task out, one can use an email test service such as &lt;a href="https://mailtrap.io/" target="_blank" rel="noopener noreferrer"&gt;Mailtrap&lt;/a&gt;.&lt;/div&gt; &lt;h2&gt;Considerations when using timers&lt;/h2&gt; &lt;p&gt;By default, jBPM uses &lt;a href="https://docs.jboss.org/author/display/AS72/EJB+3+Reference+Guide" target="_blank" rel="noopener noreferrer"&gt;EJB timer services&lt;/a&gt; to implement timers when deployed on a Java EE (Jakarta EE) server. EJB timers are not recommended for high volume situations. &lt;a href="http://www.quartz-scheduler.org/" target="_blank" rel="noopener noreferrer"&gt;Quartz&lt;/a&gt; is a better alternative and is also available in a Spring Boot deployment.&lt;/p&gt; &lt;p&gt;Another option is to use the service-level agreement (SLA) due date property of a node. This &lt;a href="http://mswiderski.blogspot.com/2018/02/track-your-processes-and-activities.html" target="_blank" rel="noopener noreferrer"&gt;blog&lt;/a&gt; by Maciej Swiderski covers the SLA due date capability in jBPM.&lt;/p&gt; &lt;p&gt;Each capability, whether you choose timers or the SLA, has pros and cons. Make your choice depending on the specifics of your use case. Here, while the number of members may be large, the number of PHM triggers per member in a given time period is typically small. The period of each timer is large (weeks), so the chance of many timers triggering at the same instant is not high.&lt;/p&gt; &lt;h2&gt;Forms&lt;/h2&gt; &lt;p&gt;Data entry forms can be automatically generated for each human task, and for each process. These forms are used mostly for the purpose of testing process execution during development. Typically, the production user interface of a human task is custom made. In this specific use case, the actor of each task should enter data using an existing application that passes the data to jBPM through a REST API exposed by jBPM. Therefore, you will not concern yourself with UI development.&lt;/p&gt; &lt;h2&gt;Event listeners&lt;/h2&gt; &lt;p&gt;The jBPM project is configured to use &lt;a href="https://docs.jboss.org/jbpm/release/latest/jbpm-docs/html_single/#_event_listeners"&gt;event listeners&lt;/a&gt; to trace process and rule information at runtime. If you want to take advantage of event listeners, you need to clone &lt;a href="https://github.com/mauriziocarioli/PHM-Tracing" target="_blank" rel="noopener noreferrer"&gt;the PHM-Tracing&lt;/a&gt; and &lt;a href="https://github.com/mauriziocarioli/Tracing" target="_blank" rel="noopener noreferrer"&gt;Tracing projects&lt;/a&gt;, and then build two jar files to install in the Kie server&amp;#8217;s &lt;code&gt;lib&lt;/code&gt; directory. Otherwise, just &lt;a href="https://gist.github.com/mauriziocarioli/bc5b6c19189a793a6dfae4e5996804fe"&gt;unregister them in the process deployment descriptor&lt;/a&gt;:&lt;/p&gt; &lt;pre&gt;&amp;#60;event-listeners&amp;#62; &amp;#60;event-listener&amp;#62; &amp;#60;resolver&amp;#62;mvel&amp;#60;/resolver&amp;#62; &amp;#60;identifier&amp;#62;new com.health_insurance.tracing.PHMProcessEventListener()&amp;#60;/identifier&amp;#62; &amp;#60;parameters/&amp;#62; &amp;#60;/event-listener&amp;#62; &amp;#60;event-listener&amp;#62; &amp;#60;resolver&amp;#62;mvel&amp;#60;/resolver&amp;#62; &amp;#60;identifier&amp;#62;new com.health_insurance.tracing.PHMAgendaEventListener()&amp;#60;/identifier&amp;#62; &amp;#60;parameters/&amp;#62; &amp;#60;/event-listener&amp;#62; &amp;#60;/event-listeners&amp;#62; &amp;#60;task-event-listeners&amp;#62; &amp;#60;task-event-listener&amp;#62; &amp;#60;resolver&amp;#62;mvel&amp;#60;/resolver&amp;#62; &amp;#60;identifier&amp;#62;new com.health_insurance.tracing.PHMTaskLifeCycleEventListener()&amp;#60;/identifier&amp;#62; &amp;#60;parameters/&amp;#62; &amp;#60;/task-event-listener&amp;#62; &amp;#60;/task-event-listeners&amp;#62;&lt;/pre&gt; &lt;h2&gt;Demo users&lt;/h2&gt; &lt;p&gt;A shell script is provided in the directory &lt;code&gt;src/main/sh&lt;/code&gt; that creates users and groups to run a few scenarios with this business process. This script is intended to be used with &lt;a href="https://wildfly.org/" target="_blank" rel="noopener noreferrer"&gt;JBoss Wildfly&lt;/a&gt;.&lt;/p&gt; &lt;h2&gt;Conclusion&lt;/h2&gt; &lt;p&gt;You have now implemented your own health management demo of an event-driven process with jBPM that is designed to scale with the complexity of the event logic as well as with the volume of events. By now you should better understand several topics through implementing this process:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Business process abstraction.&lt;/li&gt; &lt;li&gt;Service tasks or work item handlers.&lt;/li&gt; &lt;li&gt;REST API calls from within a process.&lt;/li&gt; &lt;li&gt;Email sending from within a process.&lt;/li&gt; &lt;li&gt;Signal sending and catching.&lt;/li&gt; &lt;li&gt;Timer-based reminders and escalations.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Of course, the design and development of a process are not enough. You certainly would like to see this process in action, as well. The next articles in this series will cover deploying and executing this process.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F21%2Fdesigning-an-event-driven-process-at-scale-part-3%2F&amp;#38;linkname=Designing%20an%20event-driven%20process%20at%20scale%3A%20Part%203" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F21%2Fdesigning-an-event-driven-process-at-scale-part-3%2F&amp;#38;linkname=Designing%20an%20event-driven%20process%20at%20scale%3A%20Part%203" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F21%2Fdesigning-an-event-driven-process-at-scale-part-3%2F&amp;#38;linkname=Designing%20an%20event-driven%20process%20at%20scale%3A%20Part%203" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F21%2Fdesigning-an-event-driven-process-at-scale-part-3%2F&amp;#38;linkname=Designing%20an%20event-driven%20process%20at%20scale%3A%20Part%203" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F21%2Fdesigning-an-event-driven-process-at-scale-part-3%2F&amp;#38;linkname=Designing%20an%20event-driven%20process%20at%20scale%3A%20Part%203" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F21%2Fdesigning-an-event-driven-process-at-scale-part-3%2F&amp;#38;linkname=Designing%20an%20event-driven%20process%20at%20scale%3A%20Part%203" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F21%2Fdesigning-an-event-driven-process-at-scale-part-3%2F&amp;#38;linkname=Designing%20an%20event-driven%20process%20at%20scale%3A%20Part%203" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2020%2F02%2F21%2Fdesigning-an-event-driven-process-at-scale-part-3%2F&amp;#038;title=Designing%20an%20event-driven%20process%20at%20scale%3A%20Part%203" data-a2a-url="https://developers.redhat.com/blog/2020/02/21/designing-an-event-driven-process-at-scale-part-3/" data-a2a-title="Designing an event-driven process at scale: Part 3"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2020/02/21/designing-an-event-driven-process-at-scale-part-3/"&gt;Designing an event-driven process at scale: Part 3&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;Red Hat Developer&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/Slfbt02j8fQ" height="1" width="1" alt=""/&gt;</content><summary>In the first article in this series, Designing an event-driven business process at scale: A health management example, Part 1, you found the business use case and data model for a concrete example from the health management industry. You then began implementing the example in jBPM (an open source business automation suite) by creating the Trigger process. In the second article, you implemented the...</summary><dc:creator>mcarioli</dc:creator><dc:date>2020-02-21T08:00:51Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2020/02/21/designing-an-event-driven-process-at-scale-part-3/</feedburner:origLink></entry></feed>
